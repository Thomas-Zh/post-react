{"version":3,"sources":["components/showpost.component.js","components/editpost.component.js","components/createpost.component.js","App.js","serviceWorker.js","index.js"],"names":["ShowPost","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","posts","currentPage","postsPerPage","isLoading","handleClick","bind","assertThisInitialized","event","setState","target","id","_this2","axios","get","then","response","data","reverse","catch","error","console","log","_this3","postStyle","borderStyle","fontSize","width","titleStyle","paddingLeft","paddingTop","color","paginationListStyle","float","padding","_this$state","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","map","number","react_default","a","createElement","key","onClick","style","renderPosts","index","title","content","display","flexDirection","justifyContent","listStyle","marginTop","Component","EditPost","CreatePost","onChangePostTitle","onChangePostContent","onSubmit","e","value","preventDefault","createPost","post","res","alert","className","type","onChange","background","App","react_router_dom","basename","process","to","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04c892f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class ShowPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            currentPage:1,\r\n            postsPerPage:2,\r\n            isLoading:true\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(event){\r\n        this.setState({\r\n           currentPage:event.target.id\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        axios.get('https://secure-dusk-80764.herokuapp.com/posts/show')\r\n            .then(response => {\r\n                this.setState(\r\n                    { \r\n                        posts: response.data.reverse(),\r\n                        isLoading:false\r\n                    }\r\n                );\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n    }\r\n    render() {\r\n        const postStyle={\r\n            borderStyle: 'solid',\r\n            fontSize:'1em',\r\n            width:'30%'    \r\n        }\r\n        const sectionStyle={\r\n            display:'flex',\r\n            flexDirection:'row',\r\n            justifyContent:'space-evenly'\r\n        }\r\n        const titleStyle={\r\n            paddingLeft:'10%',\r\n            paddingTop:'5%',\r\n            color:'#F7F8F9'\r\n          }\r\n        const paginationStyle ={\r\n            display: 'inline-block',\r\n            listStyle: 'none',\r\n            marginTop:'10%'\r\n        }\r\n        const paginationListStyle ={\r\n            color: '#F7F8F9',\r\n            float: 'left',\r\n            padding: '8px' \r\n        }\r\n        const { posts, currentPage, postsPerPage } = this.state\r\n        const pageNumbers =[];\r\n        for (let i = 1; i <= Math.ceil(posts.length / postsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n          }\r\n        const renderPageNumbers = pageNumbers.map((number)=>{\r\n            return(\r\n                <li\r\n                key={number}\r\n                id={number}\r\n                onClick={this.handleClick}\r\n                style={paginationListStyle}\r\n                >\r\n                    {number}\r\n                </li>\r\n            )\r\n        })\r\n        const renderPosts = posts.map((posts, index)=>{\r\n\r\n            if((index===(currentPage-1)*2)||(index===(currentPage-1)*2+1)){\r\n                return(\r\n                <div key={index} style={postStyle}>\r\n                  <div>{posts.title}</div>\r\n                  <div>{posts.content}</div>\r\n                </div>\r\n                )\r\n            }\r\n            else return (null)\r\n        })\r\n        if (this.state.isLoading){\r\n            return <h6 style={titleStyle}>loading</h6>\r\n        }\r\n        return (\r\n            <div style={titleStyle}>\r\n            <section id=\"posts\" style={sectionStyle}>\r\n                {renderPosts}\r\n            </section>\r\n            <ul id=\"pagination\" style={paginationStyle}>\r\n                {renderPageNumbers}\r\n            </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class EditPost extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Edit Post</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreatePost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            content:''\r\n        }\r\n        this.onChangePostTitle=this.onChangePostTitle.bind(this);\r\n        this.onChangePostContent=this.onChangePostContent.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChangePostTitle(e) {\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n    onChangePostContent(e){\r\n        this.setState({\r\n            content:e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const createPost= {\r\n            title:this.state.title,\r\n            content:this.state.content\r\n        }\r\n        axios.post('https://secure-dusk-80764.herokuapp.com/posts/create', createPost)\r\n            .then((res) => console.log(res.data))\r\n            .catch((error) => console.log(error));\r\n        alert('post submitted')\r\n        this.setState ({\r\n            title: '',\r\n            content:''\r\n        });\r\n    }\r\n    render() {\r\n        const titleStyle={\r\n            paddingLeft:'10%',\r\n            paddingTop:'5%',\r\n            color:'#F7F8F9'\r\n        }\r\n        return (\r\n            <div style={titleStyle}>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"new-post\" style={{display:'flex',flexDirection:'column',width:'50%'}}> \r\n                        <label>Title: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"new-post-title\"\r\n                                value={this.state.title}\r\n                                onChange={this.onChangePostTitle}\r\n                        />\r\n                        <label>Content:</label>\r\n                        <textarea\r\n                                className=\"new-post-content\"\r\n                                value={this.state.content}\r\n                                onChange={this.onChangePostContent}\r\n                        />\r\n                        <input type=\"submit\" value=\"Create Post\" className=\"create-post\" style={{background:'none',color:'#F7F8F9'}}/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n//import ShowPost from \"./components/showpost.component\";\nimport ShowPost from\"./components/showpost.component\";\nimport EditPost from \"./components/editpost.component\";\nimport CreatePost from \"./components/createpost.component\";\nimport './App.css';\nimport {Link} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    const titleStyle={\n      paddingLeft:'10%',\n      paddingTop:'5%',\n      color:'#F7F8F9'\n    }\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div style={titleStyle}>\n      <div className=\"Container\">\n      <h2>Message Board</h2>\n      </div>\n      <Link to=\"/\">\n      <button style={{background:'none',color:'#F7F8F9'}}>\n        home\n      </button>\n      </Link>\n      <Link to=\"/posts/show\">\n      <button style={{background:'none',color:'#F7F8F9'}}>\n        show posts\n      </button>\n      </Link>\n      <Link to=\"/posts/create\">\n      <button style={{background:'none',color:'#F7F8F9'}}>\n        create posts\n      </button>\n      </Link>\n      <div style={{width:'50%'}}>\n        <h6>Hi! Welcome to Message Board! To create new post, click 'create posts' button and type in your message. To see posts, click 'show posts' button.</h6>\n      </div>\n      </div>\n      <Route path=\"/posts/show\" component={ShowPost}/>\n      <Route path=\"/posts/create\" component={CreatePost}/>\n      <Route path=\"/posts/edit\" component={EditPost}/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}